# 놀이공원에서 여러 개의 놀이기구를 맡아 일하는 세혁이와 근영이는 서로 좋아하는 사이이다. 
# 그들은 쉬는 시간을 이용하여 둘만의 시간을 가지기를 원한다. 그래서 매일 일과 시작 전에 놀이기구의 운영 일정을 보고, 그날 둘이 함께할 수 있는 가장 긴 휴식시간이 언제인지를 찾으려고 한다.
# 놀이공원에서 일하는 모든 사람들은 어떤 놀이기구가 작동을 시작하기 10분 전부터, 모든 놀이기구가 작동을 멈춘 후 10분 후까지는 쉴 수 없고, 그 나머지 일과 시간에만 쉴 수 있다.
# 하루 일과를 시작하는 시각은 오전 10시이고, 일과를 마치는 시각은 오후 10시이다. 예를 들어 세 개의 놀이기구가 작동하는 시간이 다음과 같다고 하면,
# 놀이기구 1: 오전 10시 30분 - 오후 1시
# 놀이기구 2: 오후 7시 00분 - 오후 9시 10분
# 놀이기구 3: 오후 12시 30분 - 오후 4시 50분
# 세혁이와 근영이는 놀이기구 1이 운행되기 전에 20분, 놀이기구 3의 운행이 끝나고 놀이기구 2의 운행시작 전 사이에 1시간 50분, 놀이기구 2의 운행이 끝난 후에 40분 동안 쉴 수 있다. 따라서 둘이 함께할 수 있는 가장 긴 시간은 1시간 50분이다.
# 놀이기구 운영 일정이 주어질 때, 그 날 세혁이와 근영이가 함께할 수 있는 가장 긴 시간을 구하는 프로그램을 작성하시오.

import sys

input = sys.stdin.readline

n = int(input())
sche = []
open_ = 10 * 60
close_ = 22 * 60

for _ in range(n):
    start, end = map(str, input().split(" "))
    start = int(start[:2]) * 60 + int(start[2:]) - 10
    end = int(end[:2]) * 60 + int(end[2:]) + 10
    sche.append([start, end])
sche.sort()
ans = sche[0][0] - open_
last = sche[0][1]

for i in range(n-1):
    ans = max(ans, sche[i+1][0] - sche[i][1])
    last = max(last, sche[i+1][1])
    sche[i+1][1] = last
ans = max(ans, close_ - sche[-1][1])
print(ans)