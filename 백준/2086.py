# 진홍이는 숫자를 좋아한다. 오늘도 숫자를 가지고 놀던 진홍이는 두 숫자의 비트 우정지수를 구해보았다. 비트 우정지수란, 10진법으로 나타낸 두 정수를 이진수로 나타내었을 때, 두 숫자를 같게 만드는데 필요한  최소 연산 횟수를 말한다. 연산의 종류는 다음과 같다.
#    1. 하나의 이진수에서 임의의 자리의 숫자를 0 또는 1로 바꾼다.
#    2. 하나의 이진수에서 서로 다른 자리에 있는 두 숫자의 위치를 바꾼다.
# 예를 들어, 10진수 11과 12의 비트 우정지수를 구해보자. 11을 이진수로 나타내면 1011이고, 12를 이진수로 나타내면 1100이다. 1011에서 2의 자리를 0으로 바꾸고(1011 -> 1001), 1의 자리와 4의 자리의 숫자를 서로 바꾸면(1001 -> 1100) 1100이 된다. 
# 즉, 1011을 1100으로 바꾸는 최소 연산 횟수는 두 번으로, 11과 12의 비트 우정지수는 2가 된다.
# 진홍이는 어떤 두 수가 주어졌을 때 두 수의 비트 우정지수를 구하는 프로그램을 만들고 싶다. 하지만, 아쉽게도 진홍이는 프로그래밍에 약해 10진수를 이진수로 바꾸는 것 밖에 하지 못한다. 여러분이 진홍이를 도와 두 수의 비트 우정지수를 구하는 프로그램을 만들어 주자!

case = int(input())
ans = []
for _ in range(case):
    bin1, bin2 = input().split()
    one=0
    zero=0
    for i in range(len(bin1)):
        if bin1[i] != bin2[i]:
            if bin1[i] == '1':
                one+=1
            else:
                zero+=1
    cnt = max(one, zero)
    ans.append(cnt)
for i in ans:
    print(i)
