# 성원이는 오늘 이산수학 수업 시간에 에라토스테네스의 체에 대해 배웠다. 에라토스테네스의 체는 고대 그리스 수학자 에라토스테네스가 발견한 소수를 찾는 방법이다. 
# 성원이는 이 방법에 너무나 큰 감명을 받았고, 당장 실습실에 가서 C++로 구현해보기로 했다. 그런데 성원이는 교재도 없고 필기를 하는 성격도 아니기 때문에 수업내용이 정확히 기억나지 않았다. 
# 성원이는 기억을 열심히 더듬어 마침내 아래와 같은 코드를 작성했다.
# 형석이는 위 코드의 연산횟수를 직접 측정해서 위 코드의 시간복잡도가 $O(n)$이 아님을 증명하려고 한다. 구체적으로 위 코드의 6번 줄이 몇 번 실행될지를 측정하고 그 데이터로 그래프를 그려 보여주려고 한다. \
# 그런데 막상 직접 측정하려고 보니 이것은 매우 귀찮은 일이었다. 허접인 성원이때문에 내가 이 고생을 해야 한다니! 귀찮아진 형석이는 이 작업을 당신에게 떠넘겼다. 
# 위 코드에서 n에 해당하는 값이 주어졌을 때, 위 코드의 6번 줄이 몇 번 실행될지를 계산하는 프로그램을 작성해서 형석이를 도와주자.

n = int(input())
sum = n
i = 2
temp = 1
while i < n:
    temp = (n-1)//((n-1)//i)
    cnt = 1 + (n-1)//i
    sum += (temp - i + 1) * cnt
    i = temp+1
if n != 1:
    sum += 1
print(sum)
